type Car = record {
  id : text;
  model : text;
  image_url : text;
  make : text;
  createdAt : nat64;
  year : nat;
  description : text;
  owner_email : text;
  updatedAt : opt nat64;
  is_available : bool;
  price : nat;
};
type CarPayload = record {
  model : text;
  image_url : text;
  make : text;
  year : nat64;
  description : text;
  owner_email : text;
  is_available : bool;
  price : nat64;
};
type _AzleResult = variant { Ok : Car; Err : text };
type _AzleResult_1 = variant { Ok : vec Car; Err : text };
type _AzleResult_2 = variant { Ok : text; Err : text };
service : () -> {
  createCarListing : (CarPayload) -> (_AzleResult);
  getCarById : (text) -> (_AzleResult) query;
  getCarListings : () -> (_AzleResult_1) query;
  toggleCarAvailability : (text) -> (_AzleResult_2);
  updateCarListing : (text, CarPayload) -> (_AzleResult);
}